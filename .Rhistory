library(klaR)
library(knitr)
library(glmnet)
library(plyr)
library(gam)
library(cluster)
library(fpc)
library(ggmap)
library(randomForest)
library(pROC)
library(rattle)
library(rpart.plot)
library(nnet)
library(leaps)
library(boot)
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
options(scipen = 4)
# Chunk 2
AccidentData <- read.csv("http://www.andrew.cmu.edu/user/achoulde/95791/projects/Project%20D/DfTRoadSafety_Accidents_2012.csv", header = TRUE)
# Chunk 3
set.seed(531)
AccidentData$Day_of_Week[which(AccidentData$Day_of_Week==7)]="Weekend"
AccidentData$Day_of_Week[which(AccidentData$Day_of_Week==1)]="Weekend"
AccidentData$Day_of_Week[which(AccidentData$Day_of_Week!= "Weekend")]= "Workday"
time=rep(0,length(AccidentData$Time))
time[which(as.numeric(AccidentData$Time)< 421-60)]="Night"      #1: 00:00-06:59
AccidentData$Time[which(as.numeric(AccidentData$Time)< 421-60)]="23:59"
time[which(as.numeric(AccidentData$Time)< 542+60)]="Morning Rush Hours"      #1: 07:00-09:00
AccidentData$Time[which(as.numeric(AccidentData$Time)< 542+60)]="23:59"
time[which(as.numeric(AccidentData$Time)< 1021-60)]="Day Time"      #1: 09:01-16:59
AccidentData$Time[which(as.numeric(AccidentData$Time)< 1021-60)]="23:59"
time[which(as.numeric(AccidentData$Time)< 1142+60)]="Night Rush Hours"      #1: 17:00-19:00
AccidentData$Time[which(as.numeric(AccidentData$Time)< 1141+60)]="23:59"
time[which(time==0)]="Night"
AccidentData <- data.frame(AccidentData,time)
AccidentData <- transform(AccidentData, Speed_limit = Speed_limit)
AccidentData <- transform(AccidentData, Accident_Severity = mapvalues(Accident_Severity, c(1,2,3),c("Fatal", "Serious","Slight")))
# Randomly select 20% of the data to be held out for model validation
AccidentData.1.test.idx <- sample(which(AccidentData$Accident_Severity == 1),length(which(AccidentData$Accident_Severity == 1))*0.2,replace =TRUE)
AccidentData.2.test.idx <- sample(which(AccidentData$Accident_Severity == 2),length(which(AccidentData$Accident_Severity == 2))*0.2,replace =TRUE)
AccidentData.3.test.idx <- sample(which(AccidentData$Accident_Severity == 3),length(which(AccidentData$Accident_Severity == 3))*0.2,replace =TRUE)
AccidentData.test.ind <- c(AccidentData.1.test.idx,AccidentData.2.test.idx,AccidentData.3.test.idx)
AccidentData.train.ind <- setdiff(1:nrow(AccidentData), AccidentData.test.ind)
# Just pull the covariates available to marketers (cols 1:8) and the outcome (col 17)
AccidentData.train <- AccidentData[AccidentData.train.ind, c(11,33,17,18,23,25,26,27,30,7)]
AccidentData.test <- AccidentData[AccidentData.test.ind, c(11,33,17,18,23,25,26,27,30,7)]
AccidentData.location <- AccidentData[,c(4,5,7)]
# Chunk 4
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = pmax(1, cex.cor * r))
}
#pairs(~.,data=AccidentData.train,lower.panel = panel.cor)
# Chunk 5
mu.fit <- multinom(Accident_Severity ~ ., data = AccidentData.train )
#names(coef(fit.km))[which(coef(summary(fit))[,4]<=0.05)]
Accident.subset <- regsubsets(Accident_Severity ~ .,
data = AccidentData.train,
nbest = 1,    # 1 best model for each number of predictors
nvmax = NULL,    # NULL for no limit on number of variables
method = "forward", really.big = TRUE)
print(names(coef(Accident.subset,id=5)))
# Chunk 6
qplot(x=1:9,y=summary(Accident.subset)$rsq,xlab="Model Size",ylab="R-squared",geom=c("line", "point"))
qplot(x=1:9,y=summary(Accident.subset)$cp,xlab="Model Size",ylab="AIC",geom=c("line", "point"))
qplot(x=1:9,y=summary(Accident.subset)$bic,xlab="Model Size",ylab="BIC",geom=c("line", "point"))
# Chunk 7
#plot the longitude and latitude in 1-D
#plot(AccidentData.location$Longitude)
#plot(AccidentData.location$Latitude)
mapgilbert <- get_map(location = c(lon = mean(AccidentData.location$Longitude), lat = mean(AccidentData.location$Latitude)), zoom = 5, scale = 2)
ggmap(mapgilbert) + geom_point(data = AccidentData.location, aes(x = Longitude, y = Latitude, fill = "red", alpha = 0.8), size = 5, shape = 21) +guides(fill=FALSE, alpha=FALSE, size=FALSE)
# Chunk 8
#rescaling and plot
AccidentData.location$Longitude <- (AccidentData.location$Longitude +8)*100
AccidentData.location$Latitude <- (AccidentData.location$Latitude  - 50)*10
AccidentData.location.1 <- AccidentData.location[which(AccidentData.location$Accident_Severity==1),c(1,2)]
AccidentData.location.2 <- AccidentData.location[which(AccidentData.location$Accident_Severity==2),]
AccidentData.location.3 <- AccidentData.location[which(AccidentData.location$Accident_Severity==3),]
#plot(AccidentData.location$Longitude[which(AccidentData.location$Accident_Severity==2)],AccidentData.location$Latitude[which(AccidentData.location$Accident_Severity==2)])
#plot(AccidentData.location$Longitude[which(AccidentData.location$Accident_Severity==3)],AccidentData.location$Latitude[which(AccidentData.location$Accident_Severity==3)])
#plot(AccidentData.location$Longitude[which(AccidentData.location$Accident_Severity==1)],AccidentData.location$Latitude[which(AccidentData.location$Accident_Severity==1)],xlab = "Longitude", ylab = "Latitude",col = AccidentData.location$Accident_Severity[which(AccidentData.location$Accident_Severity==1)])
# Chunk 9
Acc.location.clu.1 <- kmeans(AccidentData.location.1,10)
Accident.subset <- regsubsets(Accident_Severity ~ .,
data = AccidentData.train,
nbest = 1,    # 1 best model for each number of predictors
nvmax = NULL,    # NULL for no limit on number of variables
method = "forward", really.big = TRUE)
Accident.subset <- regsubsets(Accident_Severity ~ .,
data = AccidentData.train,
nbest = 1,    # 1 best model for each number of predictors
nvmax = NULL,    # NULL for no limit on number of variables
method = "forward", really.big = TRUE)
set.seed(531)
days=rep(0,length(AccidentData$Time))
AccidentData$Day_of_Week[which(AccidentData$Day_of_Week==7)]=1
days[which(AccidentData$Day_of_Week==1)] = "Weekend"
days[which(AccidentData$Day_of_Week==7)] = "Weekend"
AccidentData$Day_of_Week[which(AccidentData$Day_of_Week!= 1)] = 0
days[which(AccidentData$Day_of_Week!= 1)] = "Workday"
timePeriod=rep(0,length(AccidentData$Time))
time=rep(0,length(AccidentData$Time))
time[which(as.numeric(AccidentData$Time)< 421-60)]="Night"      #1: 00:00-06:59
timePeriod[which(as.numeric(AccidentData$Time)< 421-60)]=1
AccidentData$Time[which(as.numeric(AccidentData$Time)< 421-60)]="23:59"
time[which(as.numeric(AccidentData$Time)< 542+60)]="Morning Rush Hours"      #1: 07:00-09:00
timePeriod[which(as.numeric(AccidentData$Time)< 542+60)] = 2
AccidentData$Time[which(as.numeric(AccidentData$Time)< 542+60)]="23:59"
time[which(as.numeric(AccidentData$Time)< 1021-60)]="Day Time"      #1: 09:01-16:59
timePeriod[which(as.numeric(AccidentData$Time)< 1021-60)] = 3
AccidentData$Time[which(as.numeric(AccidentData$Time)< 1021-60)]="23:59"
time[which(as.numeric(AccidentData$Time)< 1142+60)]="Night Rush Hours"      #1: 17:00-19:00
timePeriod[which(as.numeric(AccidentData$Time)< 1142+60)] = 4
AccidentData$Time[which(as.numeric(AccidentData$Time)< 1141+60)]="23:59"
time[which(time==0)]="Night"
AccidentData <- data.frame(AccidentData,time,timePeriod,days)
AccidentData <- transform(AccidentData, Speed_limit = Speed_limit)
AccidentData <- transform(AccidentData, Accident_Severity = mapvalues(Accident_Severity, c(1,2,3),c("Fatal", "Serious","Slight")))
# Randomly select 20% of the data to be held out for model validation
AccidentData.1.test.idx <- sample(which(AccidentData$Accident_Severity == 1),length(which(AccidentData$Accident_Severity == 1))*0.2,replace =TRUE)
AccidentData.2.test.idx <- sample(which(AccidentData$Accident_Severity == 2),length(which(AccidentData$Accident_Severity == 2))*0.2,replace =TRUE)
AccidentData.3.test.idx <- sample(which(AccidentData$Accident_Severity == 3),length(which(AccidentData$Accident_Severity == 3))*0.2,replace =TRUE)
AccidentData.test.ind <- c(AccidentData.1.test.idx,AccidentData.2.test.idx,AccidentData.3.test.idx)
AccidentData.train.ind <- setdiff(1:nrow(AccidentData), AccidentData.test.ind)
# Just pull the covariates available to marketers (cols 1:8) and the outcome (col 17)
AccidentData.train <- AccidentData[AccidentData.train.ind, c(11,33,17,18,23,25,26,27,30,7,34,35)]
AccidentData.test <- AccidentData[AccidentData.test.ind, c(11,33,17,18,23,25,26,27,30,7,34,35)]
AccidentData.location <- AccidentData[,c(4,5,7)]
mu.fit <- multinom(Accident_Severity ~ .-timePeriod-days, data = AccidentData.train )
#names(coef(fit.km))[which(coef(summary(fit))[,4]<=0.05)]
Accident.subset <- regsubsets(Accident_Severity ~ .,
data = AccidentData.train,
nbest = 1,    # 1 best model for each number of predictors
nvmax = NULL,    # NULL for no limit on number of variables
method = "forward", really.big = TRUE)
print(names(coef(Accident.subset,id=5)))
mu.fit <- multinom(Accident_Severity ~ .-timePeriod, data = AccidentData.train )
mu.fit <- multinom(Accident_Severity ~ ., data = AccidentData.train )
AccidentData <- read.csv("http://www.andrew.cmu.edu/user/achoulde/95791/projects/Project%20D/DfTRoadSafety_Accidents_2012.csv", header = TRUE)
library(ggplot2)
library(ISLR)
library(MASS)
library(klaR)
library(knitr)
library(glmnet)
library(plyr)
library(gam)
library(cluster)
library(fpc)
library(ggmap)
library(randomForest)
library(pROC)
library(rattle)
library(rpart.plot)
library(nnet)
library(leaps)
library(boot)
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
options(scipen = 4)
set.seed(531)
days=rep(0,length(AccidentData$Time))
AccidentData$Day_of_Week[which(AccidentData$Day_of_Week==7)]=1
days[which(AccidentData$Day_of_Week==1)] = "Weekend"
days[which(AccidentData$Day_of_Week==7)] = "Weekend"
AccidentData$Day_of_Week[which(AccidentData$Day_of_Week!= 1)] = 0
days[which(AccidentData$Day_of_Week!= 1)] = "Workday"
timePeriod=rep(0,length(AccidentData$Time))
time=rep(0,length(AccidentData$Time))
timePeriod[which(as.numeric(AccidentData$Time)< 421-60)]="Night"      #1: 00:00-06:59
time[which(as.numeric(AccidentData$Time)< 421-60)]=1
AccidentData$Time[which(as.numeric(AccidentData$Time)< 421-60)]="23:59"
timePeriod[which(as.numeric(AccidentData$Time)< 542+60)]="Morning Rush Hours"      #1: 07:00-09:00
time[which(as.numeric(AccidentData$Time)< 542+60)] = 2
AccidentData$Time[which(as.numeric(AccidentData$Time)< 542+60)]="23:59"
timePeriod[which(as.numeric(AccidentData$Time)< 1021-60)]="Day Time"      #1: 09:01-16:59
time[which(as.numeric(AccidentData$Time)< 1021-60)] = 3
AccidentData$Time[which(as.numeric(AccidentData$Time)< 1021-60)]="23:59"
timePeriod[which(as.numeric(AccidentData$Time)< 1142+60)]="Night Rush Hours"      #1: 17:00-19:00
time[which(as.numeric(AccidentData$Time)< 1142+60)] = 4
AccidentData$Time[which(as.numeric(AccidentData$Time)< 1141+60)]="23:59"
AccidentData <- transform(AccidentData, Speed_limit = Speed_limit/60)
AS<- rep(0,length(AccidentData$Accident_Severity))
AS[which(AccidentData$Accident_Severity==1)] = "Fatal"
AS[which(AccidentData$Accident_Severity==2)] = "Serious"
AS[which(AccidentData$Accident_Severity==2)] = "Slight"
AccidentData <- data.frame(AccidentData,time,timePeriod,days,AS)
# Randomly select 20% of the data to be held out for model validation
AccidentData.1.test.idx <- sample(which(AccidentData$Accident_Severity == 1),length(which(AccidentData$Accident_Severity == 1))*0.2,replace =TRUE)
AccidentData.2.test.idx <- sample(which(AccidentData$Accident_Severity == 2),length(which(AccidentData$Accident_Severity == 2))*0.2,replace =TRUE)
AccidentData.3.test.idx <- sample(which(AccidentData$Accident_Severity == 3),length(which(AccidentData$Accident_Severity == 3))*0.2,replace =TRUE)
AccidentData.test.ind <- c(AccidentData.1.test.idx,AccidentData.2.test.idx,AccidentData.3.test.idx)
AccidentData.train.ind <- setdiff(1:nrow(AccidentData), AccidentData.test.ind)
# Just pull the covariates available to marketers (cols 1:8) and the outcome (col 17)
AccidentData.train <- AccidentData[AccidentData.train.ind, c(11,33,17,18,23,25,26,27,30,7,34,35,36)]
AccidentData.test <- AccidentData[AccidentData.test.ind, c(11,33,17,18,23,25,26,27,30,7,34,35,36)]
AccidentData.location <- AccidentData[,c(4,5,7)]
View(AccidentData.test)
View(AccidentData.test)
PAcc_Sev.1 = length(which(AccidentData$AS=="Fatal"))/nrow(AccidentData)
PAcc_Sev.2 = length(which(AccidentData$AS=="Serious"))/nrow(AccidentData)
PAcc_Sev.3 = length(which(AccidentData$AS=="Slight"))/nrow(AccidentData)
ggplot(AccidentData, aes(AccidentData$days,color= AccidentData$AS)) + geom_density()
PAcc_Sev_1.Day_wd = length(which(AccidentData[which(AccidentData$AS=="Fatal"),]$days ==
"Workday"))/length(which(AccidentData$AS=="Fatal"))
PAcc_Sev_2.Day_wd = length(which(AccidentData[which(AccidentData$AS=="Serious"),]$days ==
"Workday"))/length(which(AccidentData$AS=="Serious"))
PAcc_Sev_3.Day_wd = length(which(AccidentData[which(AccidentData$AS=="Slight"),]$days ==
"Workday"))/length(which(AccidentData$AS=="Slight"))
PAcc_Sev_1.Day_we = length(which(AccidentData[which(AccidentData$AS=="Fatal"),]$days ==
"Weekend"))/length(which(AccidentData$AS=="Fatal"))
PAcc_Sev_2.Day_we = length(which(AccidentData[which(AccidentData$AS=="Serious"),]$days ==
"Weekend"))/length(which(AccidentData$AS == "Serious"))
PAcc_Sev_3.Day_we = length(which(AccidentData[which(AccidentData$AS=="Slight"),]$days ==
"Weekend"))/length(which(AccidentData$AS=="Slight"))
PAcc_Sev.Day <- matrix(data = c(PAcc_Sev_1.Day_wd,PAcc_Sev_2.Day_wd,PAcc_Sev_3.Day_wd,PAcc_Sev_1.Day_we,PAcc_Sev_2.Day_we,PAcc_Sev_3.Day_we), nrow = 3,ncol=2,dimnames= list(c("Fatal","Serious","Slight"),c("Workday","Weekend")))
cat("P(Accident_Severity|workday or weekend): \n")
print(PAcc_Sev.Day)
View(AccidentData.location)
set.seed(531)
days=rep(0,length(AccidentData$Time))
AccidentData$Day_of_Week[which(AccidentData$Day_of_Week==7)]=1
days[which(AccidentData$Day_of_Week==1)] = "Weekend"
days[which(AccidentData$Day_of_Week==7)] = "Weekend"
AccidentData$Day_of_Week[which(AccidentData$Day_of_Week!= 1)] = 0
days[which(AccidentData$Day_of_Week!= 1)] = "Workday"
timePeriod=rep(0,length(AccidentData$Time))
time=rep(0,length(AccidentData$Time))
timePeriod[which(as.numeric(AccidentData$Time)< 421-60)]="Night"      #1: 00:00-06:59
time[which(as.numeric(AccidentData$Time)< 421-60)]=1
AccidentData$Time[which(as.numeric(AccidentData$Time)< 421-60)]="23:59"
timePeriod[which(as.numeric(AccidentData$Time)< 542+60)]="Morning Rush Hours"      #1: 07:00-09:00
time[which(as.numeric(AccidentData$Time)< 542+60)] = 2
AccidentData$Time[which(as.numeric(AccidentData$Time)< 542+60)]="23:59"
timePeriod[which(as.numeric(AccidentData$Time)< 1021-60)]="Day Time"      #1: 09:01-16:59
time[which(as.numeric(AccidentData$Time)< 1021-60)] = 3
AccidentData$Time[which(as.numeric(AccidentData$Time)< 1021-60)]="23:59"
timePeriod[which(as.numeric(AccidentData$Time)< 1142+60)]="Night Rush Hours"      #1: 17:00-19:00
time[which(as.numeric(AccidentData$Time)< 1142+60)] = 4
AccidentData$Time[which(as.numeric(AccidentData$Time)< 1141+60)]="23:59"
AccidentData <- transform(AccidentData, Speed_limit = Speed_limit/60)
AS<- rep(0,length(AccidentData$Accident_Severity))
AS[which(AccidentData$Accident_Severity==1)] = "Fatal"
AS[which(AccidentData$Accident_Severity==2)] = "Serious"
AS[which(AccidentData$Accident_Severity==3)] = "Slight"
AccidentData <- data.frame(AccidentData,time,timePeriod,days,AS)
# Randomly select 20% of the data to be held out for model validation
AccidentData.1.test.idx <- sample(which(AccidentData$Accident_Severity == 1),length(which(AccidentData$Accident_Severity == 1))*0.2,replace =TRUE)
AccidentData.2.test.idx <- sample(which(AccidentData$Accident_Severity == 2),length(which(AccidentData$Accident_Severity == 2))*0.2,replace =TRUE)
AccidentData.3.test.idx <- sample(which(AccidentData$Accident_Severity == 3),length(which(AccidentData$Accident_Severity == 3))*0.2,replace =TRUE)
AccidentData.test.ind <- c(AccidentData.1.test.idx,AccidentData.2.test.idx,AccidentData.3.test.idx)
AccidentData.train.ind <- setdiff(1:nrow(AccidentData), AccidentData.test.ind)
# Just pull the covariates available to marketers (cols 1:8) and the outcome (col 17)
AccidentData.train <- AccidentData[AccidentData.train.ind, c(11,33,17,18,23,25,26,27,30,7,34,35,36)]
AccidentData.test <- AccidentData[AccidentData.test.ind, c(11,33,17,18,23,25,26,27,30,7,34,35,36)]
AccidentData.location <- AccidentData[,c(4,5,7)]
PAcc_Sev.1 = length(which(AccidentData$AS=="Fatal"))/nrow(AccidentData)
PAcc_Sev.2 = length(which(AccidentData$AS=="Serious"))/nrow(AccidentData)
PAcc_Sev.3 = length(which(AccidentData$AS=="Slight"))/nrow(AccidentData)
ggplot(AccidentData, aes(AccidentData$days,color= AccidentData$AS)) + geom_density()
PAcc_Sev_1.Day_wd = length(which(AccidentData[which(AccidentData$AS=="Fatal"),]$days ==
"Workday"))/length(which(AccidentData$AS=="Fatal"))
PAcc_Sev_2.Day_wd = length(which(AccidentData[which(AccidentData$AS=="Serious"),]$days ==
"Workday"))/length(which(AccidentData$AS=="Serious"))
PAcc_Sev_3.Day_wd = length(which(AccidentData[which(AccidentData$AS=="Slight"),]$days ==
"Workday"))/length(which(AccidentData$AS=="Slight"))
PAcc_Sev_1.Day_we = length(which(AccidentData[which(AccidentData$AS=="Fatal"),]$days ==
"Weekend"))/length(which(AccidentData$AS=="Fatal"))
PAcc_Sev_2.Day_we = length(which(AccidentData[which(AccidentData$AS=="Serious"),]$days ==
"Weekend"))/length(which(AccidentData$AS == "Serious"))
PAcc_Sev_3.Day_we = length(which(AccidentData[which(AccidentData$AS=="Slight"),]$days ==
"Weekend"))/length(which(AccidentData$AS=="Slight"))
PAcc_Sev.Day <- matrix(data = c(PAcc_Sev_1.Day_wd,PAcc_Sev_2.Day_wd,PAcc_Sev_3.Day_wd,PAcc_Sev_1.Day_we,PAcc_Sev_2.Day_we,PAcc_Sev_3.Day_we), nrow = 3,ncol=2,dimnames= list(c("Fatal","Serious","Slight"),c("Workday","Weekend")))
cat("P(Accident_Severity|workday or weekend): \n")
print(PAcc_Sev.Day)
AccidentData <- read.csv("http://www.andrew.cmu.edu/user/achoulde/95791/projects/Project%20D/DfTRoadSafety_Accidents_2012.csv", header = TRUE)
set.seed(531)
days=rep(0,length(AccidentData$Time))
AccidentData$Day_of_Week[which(AccidentData$Day_of_Week==7)]=1
days[which(AccidentData$Day_of_Week==1)] = "Weekend"
days[which(AccidentData$Day_of_Week==7)] = "Weekend"
AccidentData$Day_of_Week[which(AccidentData$Day_of_Week!= 1)] = 0
days[which(AccidentData$Day_of_Week!= 1)] = "Workday"
timePeriod=rep(0,length(AccidentData$Time))
time=rep(0,length(AccidentData$Time))
timePeriod[which(as.numeric(AccidentData$Time)< 421-60)]="Night"      #1: 00:00-06:59
time[which(as.numeric(AccidentData$Time)< 421-60)]=1
AccidentData$Time[which(as.numeric(AccidentData$Time)< 421-60)]="23:59"
timePeriod[which(as.numeric(AccidentData$Time)< 542+60)]="Morning Rush Hours"      #1: 07:00-09:00
time[which(as.numeric(AccidentData$Time)< 542+60)] = 2
AccidentData$Time[which(as.numeric(AccidentData$Time)< 542+60)]="23:59"
timePeriod[which(as.numeric(AccidentData$Time)< 1021-60)]="Day Time"      #1: 09:01-16:59
time[which(as.numeric(AccidentData$Time)< 1021-60)] = 3
AccidentData$Time[which(as.numeric(AccidentData$Time)< 1021-60)]="23:59"
timePeriod[which(as.numeric(AccidentData$Time)< 1142+60)]="Night Rush Hours"      #1: 17:00-19:00
time[which(as.numeric(AccidentData$Time)< 1142+60)] = 4
AccidentData$Time[which(as.numeric(AccidentData$Time)< 1141+60)]="23:59"
AccidentData <- transform(AccidentData, Speed_limit = Speed_limit/60)
AS<- rep(0,length(AccidentData$Accident_Severity))
AS[which(AccidentData$Accident_Severity==1)] = "Fatal"
AS[which(AccidentData$Accident_Severity==2)] = "Serious"
AS[which(AccidentData$Accident_Severity==3)] = "Slight"
AccidentData <- data.frame(AccidentData,time,timePeriod,days,AS)
# Randomly select 20% of the data to be held out for model validation
AccidentData.1.test.idx <- sample(which(AccidentData$Accident_Severity == 1),length(which(AccidentData$Accident_Severity == 1))*0.2,replace =TRUE)
AccidentData.2.test.idx <- sample(which(AccidentData$Accident_Severity == 2),length(which(AccidentData$Accident_Severity == 2))*0.2,replace =TRUE)
AccidentData.3.test.idx <- sample(which(AccidentData$Accident_Severity == 3),length(which(AccidentData$Accident_Severity == 3))*0.2,replace =TRUE)
AccidentData.test.ind <- c(AccidentData.1.test.idx,AccidentData.2.test.idx,AccidentData.3.test.idx)
AccidentData.train.ind <- setdiff(1:nrow(AccidentData), AccidentData.test.ind)
# Just pull the covariates available to marketers (cols 1:8) and the outcome (col 17)
AccidentData.train <- AccidentData[AccidentData.train.ind, c(11,33,17,18,23,25,26,27,30,7,34,35,36)]
AccidentData.test <- AccidentData[AccidentData.test.ind, c(11,33,17,18,23,25,26,27,30,7,34,35,36)]
AccidentData.location <- AccidentData[,c(4,5,7)]
PAcc_Sev.1 = length(which(AccidentData$AS=="Fatal"))/nrow(AccidentData)
PAcc_Sev.2 = length(which(AccidentData$AS=="Serious"))/nrow(AccidentData)
PAcc_Sev.3 = length(which(AccidentData$AS=="Slight"))/nrow(AccidentData)
ggplot(AccidentData, aes(AccidentData$days,color= AccidentData$AS)) + geom_density()
PAcc_Sev_1.Day_wd = length(which(AccidentData[which(AccidentData$AS=="Fatal"),]$days ==
"Workday"))/length(which(AccidentData$AS=="Fatal"))
PAcc_Sev_2.Day_wd = length(which(AccidentData[which(AccidentData$AS=="Serious"),]$days ==
"Workday"))/length(which(AccidentData$AS=="Serious"))
PAcc_Sev_3.Day_wd = length(which(AccidentData[which(AccidentData$AS=="Slight"),]$days ==
"Workday"))/length(which(AccidentData$AS=="Slight"))
PAcc_Sev_1.Day_we = length(which(AccidentData[which(AccidentData$AS=="Fatal"),]$days ==
"Weekend"))/length(which(AccidentData$AS=="Fatal"))
PAcc_Sev_2.Day_we = length(which(AccidentData[which(AccidentData$AS=="Serious"),]$days ==
"Weekend"))/length(which(AccidentData$AS == "Serious"))
PAcc_Sev_3.Day_we = length(which(AccidentData[which(AccidentData$AS=="Slight"),]$days ==
"Weekend"))/length(which(AccidentData$AS=="Slight"))
PAcc_Sev.Day <- matrix(data = c(PAcc_Sev_1.Day_wd,PAcc_Sev_2.Day_wd,PAcc_Sev_3.Day_wd,PAcc_Sev_1.Day_we,PAcc_Sev_2.Day_we,PAcc_Sev_3.Day_we), nrow = 3,ncol=2,dimnames= list(c("Fatal","Serious","Slight"),c("Workday","Weekend")))
cat("P(Accident_Severity|workday or weekend): \n")
print(PAcc_Sev.Day)
ggplot(AccidentData.train, aes(AccidentData.train$timePeriod,color= AccidentData.train$AS)) + geom_density()
PAcc_Sev_1.T_M = length(which(AccidentData[which(AccidentData.train$AS=="Fatal"),]$timePeriod==
"Morning Rush Hours"))/length(which(AccidentData$AS=="Fatal"))
PAcc_Sev_2.T_M = length(which(AccidentData[which(AccidentData$AS=="Serious"),]$timePeriod ==
"Morning Rush Hours"))/length(which(AccidentData$AS=="Serious"))
PAcc_Sev_3.T_M = length(which(AccidentData[which(AccidentData$AS=="Slight"),]$timePeriod ==
"Morning Rush Hours"))/length(which(AccidentData$AS=="Slight"))
PAcc_Sev_1.T_D = length(which(AccidentData[which(AccidentData.train$AS=="Fatal"),]$timePeriod==
"Day Time"))/length(which(AccidentData$AS=="Fatal"))
PAcc_Sev_2.T_D = length(which(AccidentData[which(AccidentData$AS=="Serious"),]$timePeriod ==
"Day Time"))/length(which(AccidentData$AS=="Serious"))
PAcc_Sev_3.T_D = length(which(AccidentData[which(AccidentData$AS=="Slight"),]$timePeriod ==
"Day Time"))/length(which(AccidentData$AS=="Slight"))
PAcc_Sev_1.T_NR = length(which(AccidentData[which(AccidentData.train$AS=="Fatal"),]$timePeriod ==
"Night Rush Hours"))/length(which(AccidentData$AS=="Fatal"))
PAcc_Sev_2.T_NR = length(which(AccidentData[which(AccidentData$AS=="Serious"),]$timePeriod ==
"Night Rush Hours"))/length(which(AccidentData$AS=="Serious"))
PAcc_Sev_3.T_NR = length(which(AccidentData[which(AccidentData$AS=="Slight"),]$timePeriod ==
"Night Rush Hours"))/length(which(AccidentData$AS=="Slight"))
PAcc_Sev_1.T_N = length(which(AccidentData[which(AccidentData.train$AS=="Fatal"),]$timePeriod ==
"Night"))/length(which(AccidentData$AS =="Fatal"))
PAcc_Sev_2.T_N = length(which(AccidentData[which(AccidentData$AS=="Serious"),]$timePeriod ==
"Night"))/length(which(AccidentData$AS=="Serious"))
PAcc_Sev_3.T_N = length(which(AccidentData[which(AccidentData$AS=="Slight"),]$timePeriod ==
"Night"))/length(which(AccidentData$AS =="Slight"))
PAcc_Sev.Time <- matrix(data = c(PAcc_Sev_1.T_M,PAcc_Sev_2.T_M,PAcc_Sev_3.T_M,
PAcc_Sev_1.T_D,PAcc_Sev_2.T_D,PAcc_Sev_3.T_D,
PAcc_Sev_1.T_NR,PAcc_Sev_2.T_NR,PAcc_Sev_3.T_NR,
PAcc_Sev_1.T_N,PAcc_Sev_2.T_N,PAcc_Sev_3.T_N),
nrow = 3,ncol=4,dimnames= list(  c("Fatal","Serious","Slight"),c("Morning Rush Hours","Day Time",
"Night Rush Hours","Night")
))
cat("P(Accident_Severity|Time): \n")
print(PAcc_Sev.Time)
mu.fit <- multinom(Accident_Severity ~ .-timePeriod-days-AS, data = AccidentData.train )
Accident.subset <- regsubsets(Accident_Severity ~ -timePeriod-days-AS.,
data = AccidentData.train,
nbest = 1,    # 1 best model for each number of predictors
nvmax = NULL,    # NULL for no limit on number of variables
method = "forward", really.big = TRUE)
Accident.subset <- regsubsets(Accident_Severity ~ .-timePeriod-days-AS.,
data = AccidentData.train,
nbest = 1,    # 1 best model for each number of predictors
nvmax = NULL,    # NULL for no limit on number of variables
method = "forward", really.big = TRUE)
Accident.subset <- regsubsets(Accident_Severity ~ .-timePeriod-days-AS,
data = AccidentData.train,
nbest = 1,    # 1 best model for each number of predictors
nvmax = NULL,    # NULL for no limit on number of variables
method = "forward", really.big = TRUE)
#rescaling and plot
AccidentData.location$Longitude <- (AccidentData.location$Longitude +8)*100
AccidentData.location$Latitude <- (AccidentData.location$Latitude  - 50)*10
AccidentData.location.1 <- AccidentData.location[which(AccidentData.location$Accident_Severity==1),c(1,2)]
AccidentData.location.2 <- AccidentData.location[which(AccidentData.location$Accident_Severity==2),]
AccidentData.location.3 <- AccidentData.location[which(AccidentData.location$Accident_Severity==3),]
#plot(AccidentData.location$Longitude[which(AccidentData.location$Accident_Severity==2)],AccidentData.location$Latitude[which(AccidentData.location$Accident_Severity==2)])
plot(AccidentData.location$Longitude[which(AccidentData.location$Accident_Severity==3)],AccidentData.location$Latitude[which#(AccidentData.location$Accident_Severity==3)])
plot(AccidentData.location$Longitude[which(AccidentData.location$Accident_Severity==1)],AccidentData.location$Latitude[which(AccidentData.location$Accident_Severity==1)],xlab = "Longitude", ylab = "Latitude",col = AccidentData.location$Accident_Severity[which(AccidentData.location$Accident_Severity==1)])
#rescaling and plot
AccidentData.location$Longitude <- (AccidentData.location$Longitude +8)*100
AccidentData.location$Latitude <- (AccidentData.location$Latitude  - 50)*10
AccidentData.location.1 <- AccidentData.location[which(AccidentData.location$Accident_Severity==1),c(1,2)]
AccidentData.location.2 <- AccidentData.location[which(AccidentData.location$Accident_Severity==2),]
AccidentData.location.3 <- AccidentData.location[which(AccidentData.location$Accident_Severity==3),]
#plot(AccidentData.location$Longitude[which(AccidentData.location$Accident_Severity==2)],AccidentData.location$Latitude[which(AccidentData.location$Accident_Severity==2)])
#plot(AccidentData.location$Longitude[which(AccidentData.location$Accident_Severity==3)],AccidentData.location$Latitude[which(AccidentData.location$Accident_Severity==3)])
plot(AccidentData.location$Longitude[which(AccidentData.location$Accident_Severity==1)],AccidentData.location$Latitude[which(AccidentData.location$Accident_Severity==1)],xlab = "Longitude", ylab = "Latitude",col = AccidentData.location$Accident_Severity[which(AccidentData.location$Accident_Severity==1)])
#rescaling and plot
AccidentData.location$Longitude <- (AccidentData.location$Longitude )#*100
AccidentData.location$Latitude <- (AccidentData.location$Latitude ) #- 50)#*10
AccidentData.location.1 <- AccidentData.location[which(AccidentData.location$Accident_Severity==1),c(1,2)]
AccidentData.location.2 <- AccidentData.location[which(AccidentData.location$Accident_Severity==2),]
AccidentData.location.3 <- AccidentData.location[which(AccidentData.location$Accident_Severity==3),]
#plot(AccidentData.location$Longitude[which(AccidentData.location$Accident_Severity==2)],AccidentData.location$Latitude[which(AccidentData.location$Accident_Severity==2)])
#plot(AccidentData.location$Longitude[which(AccidentData.location$Accident_Severity==3)],AccidentData.location$Latitude[which(AccidentData.location$Accident_Severity==3)])
plot(AccidentData.location$Longitude[which(AccidentData.location$Accident_Severity==1)],AccidentData.location$Latitude[which(AccidentData.location$Accident_Severity==1)],xlab = "Longitude", ylab = "Latitude",col = AccidentData.location$Accident_Severity[which(AccidentData.location$Accident_Severity==1)])
#rescaling and plot
AccidentData.location$Longitude <- (AccidentData.location$Longitude )#*100
AccidentData.location$Latitude <- (AccidentData.location$Latitude ) #- 50)#*10
AccidentData.location.1 <- AccidentData.location[which(AccidentData.location$Accident_Severity==1),c(1,2)]
AccidentData.location.2 <- AccidentData.location[which(AccidentData.location$Accident_Severity==2),]
AccidentData.location.3 <- AccidentData.location[which(AccidentData.location$Accident_Severity==3),]
#plot(AccidentData.location$Longitude[which(AccidentData.location$Accident_Severity==2)],AccidentData.location$Latitude[which(AccidentData.location$Accident_Severity==2)])
#plot(AccidentData.location$Longitude[which(AccidentData.location$Accident_Severity==3)],AccidentData.location$Latitude[which(AccidentData.location$Accident_Severity==3)])
plot(AccidentData.location$Longitude[which(AccidentData.location$Accident_Severity==1)],AccidentData.location$Latitude[which(AccidentData.location$Accident_Severity==1)],xlab = "Longitude", ylab = "Latitude",col = AccidentData.location$Accident_Severity[which(AccidentData.location$Accident_Severity==1)])
#plot the longitude and latitude in 1-D
#plot(AccidentData.location$Longitude)
#plot(AccidentData.location$Latitude)
mapgilbert <- get_map(location = c(lon = mean(AccidentData.location$Longitude), lat = mean(AccidentData.location$Latitude)), zoom = 5, scale = 2)
ggmap(mapgilbert) + geom_point(data = AccidentData.location, aes(x = Longitude, y = Latitude, fill = "red", alpha = 0.2), size = 2, shape = 21) +guides(fill=FALSE, alpha=FALSE, size=FALSE)
AccidentData <- read.csv("http://www.andrew.cmu.edu/user/achoulde/95791/projects/Project%20D/DfTRoadSafety_Accidents_2012.csv", header = TRUE)
set.seed(531)
days=rep(0,length(AccidentData$Time))
AccidentData$Day_of_Week[which(AccidentData$Day_of_Week==7)]=1
days[which(AccidentData$Day_of_Week==1)] = "Weekend"
days[which(AccidentData$Day_of_Week==7)] = "Weekend"
AccidentData$Day_of_Week[which(AccidentData$Day_of_Week!= 1)] = 0
days[which(AccidentData$Day_of_Week!= 1)] = "Workday"
timePeriod=rep(0,length(AccidentData$Time))
time=rep(0,length(AccidentData$Time))
timePeriod[which(as.numeric(AccidentData$Time)< 421-60)]="Night"      #1: 00:00-06:59
time[which(as.numeric(AccidentData$Time)< 421-60)]=1
AccidentData$Time[which(as.numeric(AccidentData$Time)< 421-60)]="23:59"
timePeriod[which(as.numeric(AccidentData$Time)< 542+60)]="Morning Rush Hours"      #1: 07:00-09:00
time[which(as.numeric(AccidentData$Time)< 542+60)] = 2
AccidentData$Time[which(as.numeric(AccidentData$Time)< 542+60)]="23:59"
timePeriod[which(as.numeric(AccidentData$Time)< 1021-60)]="Day Time"      #1: 09:01-16:59
time[which(as.numeric(AccidentData$Time)< 1021-60)] = 3
AccidentData$Time[which(as.numeric(AccidentData$Time)< 1021-60)]="23:59"
timePeriod[which(as.numeric(AccidentData$Time)< 1142+60)]="Night Rush Hours"      #1: 17:00-19:00
time[which(as.numeric(AccidentData$Time)< 1142+60)] = 4
AccidentData$Time[which(as.numeric(AccidentData$Time)< 1141+60)]="23:59"
AccidentData <- transform(AccidentData, Speed_limit = Speed_limit/60)
AS<- rep(0,length(AccidentData$Accident_Severity))
AS[which(AccidentData$Accident_Severity==1)] = "Fatal"
AS[which(AccidentData$Accident_Severity==2)] = "Serious"
AS[which(AccidentData$Accident_Severity==3)] = "Slight"
AccidentData <- data.frame(AccidentData,time,timePeriod,days,AS)
# Randomly select 20% of the data to be held out for model validation
AccidentData.1.test.idx <- sample(which(AccidentData$Accident_Severity == 1),length(which(AccidentData$Accident_Severity == 1))*0.2,replace =TRUE)
AccidentData.2.test.idx <- sample(which(AccidentData$Accident_Severity == 2),length(which(AccidentData$Accident_Severity == 2))*0.2,replace =TRUE)
AccidentData.3.test.idx <- sample(which(AccidentData$Accident_Severity == 3),length(which(AccidentData$Accident_Severity == 3))*0.2,replace =TRUE)
AccidentData.test.ind <- c(AccidentData.1.test.idx,AccidentData.2.test.idx,AccidentData.3.test.idx)
AccidentData.train.ind <- setdiff(1:nrow(AccidentData), AccidentData.test.ind)
# Just pull the covariates available to marketers (cols 1:8) and the outcome (col 17)
AccidentData.train <- AccidentData[AccidentData.train.ind, c(11,33,17,18,23,25,26,27,30,7,34,35,36)]
AccidentData.test <- AccidentData[AccidentData.test.ind, c(11,33,17,18,23,25,26,27,30,7,34,35,36)]
AccidentData.location <- AccidentData[,c(4,5,7)]
#plot the longitude and latitude in 1-D
#plot(AccidentData.location$Longitude)
#plot(AccidentData.location$Latitude)
mapgilbert <- get_map(location = c(lon = mean(AccidentData.location$Longitude), lat = mean(AccidentData.location$Latitude)), zoom = 5, scale = 2)
ggmap(mapgilbert) + geom_point(data = AccidentData.location, aes(x = Longitude, y = Latitude, fill = "red", alpha = 0.2), size = 2, shape = 21) +guides(fill=FALSE, alpha=FALSE, size=FALSE)
#plot the longitude and latitude in 1-D
#plot(AccidentData.location$Longitude)
#plot(AccidentData.location$Latitude)
mapgilbert <- get_map(location = c(lon = mean(AccidentData.location$Longitude), lat = mean(AccidentData.location$Latitude)), zoom = 3, scale = 2)
ggmap(mapgilbert) + geom_point(data = AccidentData.location, aes(x = Longitude, y = Latitude, fill = "red", alpha = 0.2), size = 2, shape = 21) +guides(fill=FALSE, alpha=FALSE, size=FALSE)
#plot the longitude and latitude in 1-D
#plot(AccidentData.location$Longitude)
#plot(AccidentData.location$Latitude)
mapgilbert <- get_map(location = c(lon = mean(AccidentData.location$Latitude), lat = mean(AccidentData.location$LongitudeLatitude)), zoom = 3, scale = 2)
ggmap(mapgilbert) + geom_point(data = AccidentData.location, aes(x = Longitude, y = Latitude, fill = "red", alpha = 0.2), size = 2, shape = 21) +guides(fill=FALSE, alpha=FALSE, size=FALSE)
#plot the longitude and latitude in 1-D
#plot(AccidentData.location$Longitude)
#plot(AccidentData.location$Latitude)
mapgilbert <- get_map(location = c(lon = mean(AccidentData.location$Latitude), lat = mean(AccidentData.location$LongitudeLatitude)), zoom = 3, scale = 2)
ggmap(mapgilbert) + geom_point(data = AccidentData.location, aes(x =Latitude , y =Longitude  Latitude, fill = "red", alpha = 0.2), size = 2, shape = 21) +guides(fill=FALSE, alpha=FALSE, size=FALSE)
#plot the longitude and latitude in 1-D
#plot(AccidentData.location$Longitude)
#plot(AccidentData.location$Latitude)
mapgilbert <- get_map(location = c(lon = mean(AccidentData.location$Latitude), lat = mean(AccidentData.location$LongitudeLatitude)), zoom = 3, scale = 2)
ggmap(mapgilbert) + geom_point(data = AccidentData.location, aes(x =Latitude , y =Longitude  Latitude, fill = "red", alpha = 0.2), size = 2, shape = 21) +guides(fill=FALSE, alpha=FALSE, size=FALSE)
#plot the longitude and latitude in 1-D
#plot(AccidentData.location$Longitude)
#plot(AccidentData.location$Latitude)
mapgilbert <- get_map(location = c(lon = mean(AccidentData.location$Latitude), lat = mean(AccidentData.location$LongitudeLatitude)), zoom = 3, scale = 2)
ggmap(mapgilbert) + geom_point(data = AccidentData.location, aes(x =Latitude , y =Longitude, fill = "red", alpha = 0.2), size = 2, shape = 21) +guides(fill=FALSE, alpha=FALSE, size=FALSE)
mapgilbert <- get_map(location = "USA", zoom = 3, scale = 2)
ggmap(mapgilbert)
mapgilbert <- get_map(location = "USA", zoom = 4, scale = 2)
ggmap(mapgilbert)
ggmap(mapgilbert) + geom_point(data = AccidentData.location, aes(x =Latitude , y =Longitude, col = "red", alpha = 0.2), size = 2, shape = 21) +guides(fill=FALSE, alpha=FALSE, size=FALSE)
mapgilbert <- get_map(location = c(lon = mean(AccidentData.location$Latitude), lat = mean(AccidentData.location$LongitudeLatitude)), zoom = 4, scale = 2)
mapgilbert <- get_map(location = c(lon = mean(AccidentData.location$Latitude), lat = mean(AccidentData.location$Longitude)), zoom = 4, scale = 2)
ggmap(mapgilbert) + geom_point(data = AccidentData.location, aes(x =Latitude , y =Longitude, col = "red", alpha = 0.8), size = 2, shape = 21) +guides(fill=FALSE, alpha=FALSE, size=FALSE)
#plot the longitude and latitude in 1-D
#plot(AccidentData.location$Longitude)
#plot(AccidentData.location$Latitude)
mapgilbert <- get_map(location = c(lon = mean(-AccidentData.location$Longitude), lat = mean(-AccidentData.location$Latitude)), zoom = 4, scale = 2)
ggmap(mapgilbert) + geom_point(data = AccidentData.location, aes(x = -Longitude, y = -Latitude, fill = "red", alpha = 0.2), size = 2, shape = 21) +guides(fill=FALSE, alpha=FALSE, size=FALSE)
mean(AccidentData.location$Longitude)
mean(AccidentData.location$Latitude)
